{
  "swagger": "2.0",
  "info": {
    "version": "v3",
    "title": "Microsoft Bot Connector API - Microsoft Teams Extensions - v3.0",
    "description": "﻿﻿The Bot Connector REST API extension for Microsoft Teams allows your bot to perform extended operations on to Microsoft Teams channel configured in the\r\n[Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST and JSON over HTTPS.\r\n\r\nClient libraries for this REST API are available. See below for a list.\r\n\r\n\r\n\r\nAuthentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is\r\ndescribed in detail in the [Connector Authentication](https://docs.botframework.com/en-us/restapi/authentication) document.\r\n\r\n# Client Libraries for the Bot Connector REST API\r\n\r\n* [Bot Builder for C#](https://docs.botframework.com/en-us/csharp/builder/sdkreference/)\r\n* [Bot Builder for Node.js](https://docs.botframework.com/en-us/node/builder/overview/)\r\n\r\n© 2016 Microsoft",
    "termsOfService": "https://www.microsoft.com/en-us/legal/intellectualproperty/copyright/default.aspx",
    "contact": {
      "name": "Bot Framework",
      "url": "https://botframework.com",
      "email": "botframework@microsoft.com"
    },
    "license": {
      "name": "The MIT License (MIT)",
      "url": "https://opensource.org/licenses/MIT"
    }
  },

  "host": "api.botframework.com",
  "schemes": [ "https" ],
  "paths": {
    "/v3/teams/{teamId}/conversations": {
      "get": {
        "tags": [ "Teams" ],
        "summary": "Fetches channel list for a given team",
        "description": "Fetch the channel list.",
        "operationId": "Teams_FetchChannelList",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "﻿List of channels in the team.",
            "schema": {
              "$ref": "#/definitions/ConversationList"
            }
          }
        },
        "deprecated": false
      }
    },

    "/v3/teams/{teamId}": {
      "get": {
        "tags": [ "Teams" ],
        "summary": "Fetches details related to a team",
        "description": "Fetch details for a team",
        "operationId": "Teams_FetchTeamDetails",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "﻿Details for the team.",
            "schema": {
              "$ref": "#/definitions/TeamDetails"
            }
          }
        },
        "deprecated": false
      }
    }
  },

  "definitions": {
    "ChannelInfo": {
      "description": "A channel info object which decribes the channel.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier representing a channel"
        },
        "name": {
          "type": "string",
          "description": "Name of the channel"
        }
      }
    },

    "ConversationList": {
      "description": "List of channels under a team",
      "type": "object",
      "properties": {
        "conversations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelInfo"
          }
        }
      }
    },

    "TeamDetails": {
      "description": "Details related to a team",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier representing a team"
        },
        "name": {
          "type": "string",
          "description": "Name of team."
        },
        "aadGroupId": {
          "type": "string",
          "description": "Azure Active Directory (AAD) Group Id for the team."
        }
      }
    },

    "TeamsChannelData": {
      "description": "Channel data specific to messages received in Microsoft Teams",
      "type": "object",
      "properties": {
        "channel": {
          "description": "Information about the channel in which the message was sent",
          "type": "object",
          "$ref": "#/definitions/ChannelInfo"
        },
        "eventType": {
          "type": "string",
          "description": "Type of event."
        },
        "team": {
          "description": "Information about the team in which the message was sent",
          "type": "object",
          "$ref": "#/definitions/TeamInfo"
        },
        "notification": {
          "description": "Notification settings for the message",
          "type": "object",
          "$ref": "#/definitions/NotificationInfo"
        },
        "tenant": {
          "description": "Information about the tenant in which the message was sent",
          "type": "object",
          "$ref": "#/definitions/TenantInfo"
        }
      }
    },

    "TeamInfo": {
      "description": "Describes a team",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier representing a team"
        },
        "name": {
          "type": "string",
          "description": "Name of team."
        }
      }
    },

    "NotificationInfo": {
      "description": "Specifies if a notification is to be sent for the mentions.",
      "type": "object",
      "properties": {
        "alert": {
          "type": "boolean",
          "description": "true if notification is to be sent to the user, false otherwise."
        }
      }
    },

    "TenantInfo": {
      "description": "Describes a tenant",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier representing a tenant"
        }
      }
    },

    "Object": {
      "type": "object",
      "properties": {}
    },

    "CardAction": {
      "description": "An action on a card",
      "type": "object",
      "properties": {
        "type": {
          "description": "Defines the type of action implemented by this button.",
          "type": "string"
        },
        "title": {
          "description": "Text description which appear on the button.",
          "type": "string"
        },
        "image": {
          "description": "URL Picture which will appear on the button, next to text label.",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Object",
          "description": "Supplementary parameter for action. Content of this property depends on the ActionType"
        }
      }
    },

    "CardImage": {
      "description": "An image on a card",
      "type": "object",
      "properties": {
        "url": {
          "description": "URL Thumbnail image for major content property.",
          "type": "string"
        },
        "alt": {
          "description": "Image description intended for screen readers",
          "type": "string"
        },
        "tap": {
          "$ref": "#/definitions/CardAction",
          "description": "Action assigned to specific Attachment.E.g.navigate to specific URL or play/open media content"
        }
      }
    },

    "O365ConnectorCard": {
      "description": "O365 connector card",
      "type": "object",
      "properties": {
        "title": {
          "description": "Title of the item",
          "type": "string"
        },
        "text": {
          "description": "Text for the card",
          "type": "string"
        },
        "summary": {
          "description": "Summary for the card",
          "type": "string"
        },
        "themeColor": {
          "description": "Theme color for the card",
          "type": "string"
        },
        "sections": {
          "description": "Set of sections for the current card",
          "type": "array",
          "items": { "$ref": "#/definitions/O365ConnectorCardSection" }
        },
        "potentialAction": {
          "description": "Set of actions for the current card",
          "type": "array",
          "items": { "$ref": "#/definitions/O365ConnectorCardActionBase" }
        }
      }
    },

    "O365ConnectorCardSection": {
      "description": "O365 connector card section",
      "type": "object",
      "properties": {
        "title": {
          "description": "Title of the section",
          "type": "string"
        },
        "text": {
          "description": "Text for the section",
          "type": "string"
        },
        "activityTitle": {
          "description": "Activity title",
          "type": "string"
        },
        "activitySubtitle": {
          "description": "Activity subtitle",
          "type": "string"
        },
        "activityText": {
          "description": "Activity text",
          "type": "string"
        },
        "activityImage": {
          "description": "Activity image",
          "type": "string"
        },
        "activityImageType": {
          "description": "Describes how Activity image is rendered",
          "type": "string",
          "enum": [ "avatar", "article" ]
        },
        "markdown": {
          "description": "Use markdown for all text contents. Default vaule is true.",
          "type": "boolean"
        },
        "facts": {
          "description": "Set of facts for the current section",
          "type": "array",
          "items": { "$ref": "#/definitions/O365ConnectorCardFact" }
        },
        "images": {
          "description": "Set of images for the current section",
          "type": "array",
          "items": { "$ref": "#/definitions/O365ConnectorCardImage" }
        },
        "potentialAction": {
          "description": "Set of actions for the current section",
          "type": "array",
          "items": { "$ref": "#/definitions/O365ConnectorCardActionBase" }
        }
      }
    },

    "O365ConnectorCardFact": {
      "description": "O365 connector card fact",
      "type": "object",
      "properties": {
        "name": {
          "description": "Display name of the fact",
          "type": "string"
        },
        "value": {
          "description": "Display value for the fact",
          "type": "string"
        }
      }
    },

    "O365ConnectorCardImage": {
      "description": "O365 connector card image",
      "type": "object",
      "properties": {
        "image": {
          "description": "URL for the image",
          "type": "string"
        },
        "title": {
          "description": "Alternative text for the image",
          "type": "string"
        }
      }
    },

    "O365ConnectorCardActionBase": {
      "description": "O365 connector card action base",
      "type": "object",
      "properties": {
        "@type": {
          "description": "Type of the action",
          "type": "string"
        },
        "name": {
          "description": "Name of the action that will be used as button title",
          "type": "string"
        },
        "@id": {
          "description": "Action Id",
          "type": "string"
        }
      }
    },

    "O365ConnectorCardViewAction": {
      "description": "O365 connector card ViewAction action",
      "allOf": [
        {
          "$ref": "#/definitions/O365ConnectorCardActionBase"
        },
        {
          "type": "object",
          "properties": {
            "target": {
              "description": "Target urls, only the first url effective for card button",
              "type": "array",
              "items": { "type": "string" }
            }
          }
        }
      ]
    },

    "O365ConnectorCardOpenUriTarget": {
      "description": "O365 connector card OpenUri target",
      "type": "object",
      "properties": {
        "os": {
          "description": "Target operating system.",
          "type": "string",
          "enum": [ "default", "iOS", "android", "windows" ]
        },
        "uri": {
          "description": "Target url",
          "type": "string"
        }
      }
    },

    "O365ConnectorCardOpenUri": {
      "description": "O365 connector card OpenUri action",
      "allOf": [
        {
          "$ref": "#/definitions/O365ConnectorCardActionBase"
        },
        {
          "type": "object",
          "properties": {
            "targets": {
              "description": "Target os / urls",
              "type": "array",
              "items": { "$ref": "#/definitions/O365ConnectorCardOpenUriTarget" }
            }
          }
        }
      ]
    },

    "O365ConnectorCardHttpPOST": {
      "description": "O365 connector card HttpPOST action",
      "allOf": [
        {
          "$ref": "#/definitions/O365ConnectorCardActionBase"
        },
        {
          "type": "object",
          "properties": {
            "body": {
              "description": "Content to be posted back to bots via invoke",
              "type": "string"
            }
          }
        }
      ]
    },

    "O365ConnectorCardActionCard": {
      "description": "O365 connector card ActionCard action",
      "allOf": [
        {
          "$ref": "#/definitions/O365ConnectorCardActionBase"
        },
        {
          "type": "object",
          "properties": {
            "inputs": {
              "description": "Set of inputs contained in this ActionCard whose each item can be in any subtype of O365ConnectorCardInputBase",
              "type": "array",
              "items": { "$ref": "#/definitions/O365ConnectorCardInputBase" }
            },
            "actions": {
              "description": "Set of actions contained in this ActionCard whose each item can be in any subtype of O365ConnectorCardActionBase except O365ConnectorCardActionCard, as nested ActionCard is forbidden.",
              "type": "array",
              "items": { "$ref": "#/definitions/O365ConnectorCardActionBase" }
            }
          }
        }
      ]
    },

    "O365ConnectorCardInputBase": {
      "description": "O365 connector card input for ActionCard action",
      "type": "object",
      "properties": {
        "@type": {
          "description": "Input type name",
          "type": "string"
        },
        "id": {
          "description": "Input Id. It must be unique per entire O365 connector card.",
          "type": "string"
        },
        "isRequired": {
          "description": "Define if this input is a required field. Default value is false.",
          "type": "boolean"
        },
        "title": {
          "description": "Input title that will be shown as the placeholder",
          "type": "string"
        },
        "value": {
          "description": "Default value for this input field",
          "type": "string"
        }
      }
    },

    "O365ConnectorCardTextInput": {
      "description": "O365 connector card text input",
      "allOf": [
        {
          "$ref": "#/definitions/O365ConnectorCardInputBase"
        },
        {
          "type": "object",
          "properties": {
            "isMultiline": {
              "description": "Define if text input is allowed for multiple lines. Default value is false.",
              "type": "boolean"
            },
            "maxLength": {
              "description": "Maximum length of text input. Default value is unlimited.",
              "type": "number"
            }
          }
        }
      ]
    },

    "O365ConnectorCardDateInput": {
      "description": "O365 connector card date input",
      "allOf": [
        {
          "$ref": "#/definitions/O365ConnectorCardInputBase"
        },
        {
          "type": "object",
          "properties": {
            "includeTime": {
              "description": "Include time input field. Default value  is false (date only).",
              "type": "boolean"
            }
          }
        }
      ]
    },

    "O365ConnectorCardMultichoiceInput": {
      "description": "O365 connector card multiple choice input",
      "allOf": [
        {
          "$ref": "#/definitions/O365ConnectorCardInputBase"
        },
        {
          "type": "object",
          "properties": {
            "choices": {
              "description": "Set of choices whose each item can be in any subtype of O365ConnectorCardMultichoiceInputChoice.",
              "type": "array",
              "items": { "$ref": "#/definitions/O365ConnectorCardMultichoiceInputChoice" }
            },
            "style": {
              "description": "Choice item rendering style. Default valud is 'compact'.",
              "type": "string",
              "enum": [ "compact", "expanded" ]
            },
            "isMultiSelect": {
              "description": "Define if this input field allows multiple selections. Default value is false.",
              "type": "boolean"
            }
          }
        }
      ]
    },

    "O365ConnectorCardMultichoiceInputChoice": {
      "description": "O365O365 connector card multiple choice input item",
      "type": "object",
      "properties": {
        "display": {
          "description": "The text rednered on ActionCard.",
          "type": "string"
        },
        "value": {
          "description": "The value received as results.",
          "type": "string"
        }
      }
    },

    "O365ConnectorCardActionQuery": {
      "description": "O365 connector card HttpPOST invoke query",
      "type": "object",
      "properties": {
        "body": {
          "description": "The results of body string defined in IO365ConnectorCardHttpPOST with substituted input values",
          "type": "string"
        },
        "actionId": {
          "description": "Action Id associated with the HttpPOST action button triggered, defined in O365ConnectorCardActionBase.",
          "type": "string"
        }
      }
    },

    "SigninStateVerificationQuery": {
      "description": "Signin state (part of signin action auth flow) verification invoke query",
      "type": "object",
      "properties": {
        "state": {
          "description": " The state string originally received when the signin web flow is finished with a state posted back to client via tab SDK microsoftTeams.authentication.notifySuccess(state)",
          "type": "string"
        }
      }
    },

    "ComposeExtensionQueryOptions": {
      "description": "Compose extensions query options",
      "type": "object",
      "properties": {
        "skip": {
          "format": "int32",
          "description": "Number of entities to skip",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "description": "Number of entities to fetch",
          "type": "integer"
        }
      }
    },

    "ComposeExtensionParameter": {
      "description": "Compose extension query parameters",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the parameter",
          "type": "string"
        },
        "value": {
          "description": "Value of the parameter",
          "$ref": "#/definitions/Object"
        }
      }
    },

    "ComposeExtensionQuery": {
      "description": "Compose extension query",
      "type": "object",
      "properties": {
        "commandId": {
          "description": "Id of the command assigned by Bot",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the query",
          "type": "array",
          "items": { "$ref": "#/definitions/ComposeExtensionParameter" }
        },
        "queryOptions": {
          "description": "Options for the query",
          "$ref": "#/definitions/ComposeExtensionQueryOptions"
        },
        "state": {
          "description": "State parameter passed back to the bot after authentication/configuration flow",
          "type": "string"
        }
      }
    },

    "Attachment": {
      "description": "An attachment within an activity",
      "type": "object",
      "properties": {
        "contentType": {
          "description": "mimetype/Contenttype for the file",
          "type": "string"
        },
        "contentUrl": {
          "description": "Content Url",
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/Object",
          "description": "Embedded content"
        },
        "name": {
          "description": "(OPTIONAL) The name of the attachment",
          "type": "string"
        },
        "thumbnailUrl": {
          "description": "(OPTIONAL) Thumbnail associated with attachment",
          "type": "string"
        }
      }
    },

    "ComposeExtensionResponse": {
      "description": "Compose extension response",
      "type": "object",
      "properties": {
        "composeExtension": {
          "$ref": "#/definitions/ComposeExtensionResult"
        }
      }
    },

    "ComposeExtensionSuggestedAction": {
      "description": "Compose extension Actions (Only when type is auth or config)",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Actions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CardAction",
            "description": "Action to start authentication or configuration flow"
          }
        }
      }
    },

    "ComposeExtensionResult": {
      "description": "Compose extension result",
      "type": "object",
      "properties": {
        "attachmentLayout": {
          "description": "Hint for how to display multiple attachments.",
          "type": "string"
        },
        "type": {
          "description": "The type of the result",
          "type": "string"
        },
        "attachments": {
          "description": "(Only when type is result) Attachments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComposeExtensionAttachment"
          }
        },
        "suggestedActions": {
          "description": "(Only when type of auth or config) Suggested actions",
          "$ref": "#/definitions/ComposeExtensionSuggestedAction"
        },
        "text": {
          "description": "(Only when type is message) Text",
          "type": "string"
        }
      }
    },

    "ComposeExtensionAttachment": {
      "description": "Compose extension attachment.",
      "allOf": [
        {
          "$ref": "#/definitions/Attachment"
        },
        {
          "type": "object",
          "properties": {
            "preview": {
              "description": "Specifies how the result should be displayed in the preview window",
              "$ref": "#/definitions/Attachment"
            }
          }
        }
      ]
    },

    "ChannelAccount": {
      "description": "Channel account information needed to route a message",
      "type": "object",
      "properties": {
        "id": {
          "description": "Channel id for the user or bot on this channel (Example: joe@smith.com, or @joesmith or 123456)",
          "type": "string"
        },
        "name": {
          "description": "Display friendly name",
          "type": "string"
        }
      }
    },

    "TeamsChannelAccount": {
      "description": "Teams channel account detailing user Azure Active Directory details.",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelAccount"
        },
        {
          "type": "object",
          "properties": {
            "objectId": {
              "description": "Unique Azure Active Directory object Id.",
              "type": "string"
            },
            "givenName": {
              "description": "Given name part of the user name.",
              "type": "string"
            },
            "surname": {
              "description": "Surname part of the user name.",
              "type": "string"
            },
            "email": {
              "description": "Email Id of the user.",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "Unique user principal name",
              "type": "string"
            }
          }
        }
      ]
    },

    "FileConsentCard": {
      "description": "File consent card attachment.",
      "type": "object",
      "properties": {
        "description": {
          "description": "File description.",
          "type": "string"
        },
        "sizeInBytes": {
          "description": "Size of the file to be uploaded in Bytes.",
          "format": "int64",
          "type": "integer"
        },
        "acceptContext": {
          "description": "Context sent back to the Bot if user consented to upload. This is free flow schema and is sent back in Value field of Activity.",
          "type": "object"
        },
        "declineContext": {
          "description": "Context sent back to the Bot if user declined. This is free flow schema and is sent back in Value field of Activity.",
          "type": "object"
        }
      }
    },

    "FileDownloadInfo": {
      "description": "File download info attachment.",
      "type": "object",
      "properties": {
        "downloadUrl": {
          "description": "File download url.",
          "type": "string"
        },
        "uniqueId": {
          "description": "Unique Id for the file.",
          "type": "string"
        },
        "fileType": {
          "description": "Type of file.",
          "type": "string"
        }
      }
    },

    "FileInfoCard": {
      "description": "File info card.",
      "type": "object",
      "properties": {
        "uniqueId": {
          "description": "Unique Id for the file.",
          "type": "string"
        },
        "fileType": {
          "description": "Type of file.",
          "type": "string"
        }
      }
    },

    "FileUploadInfo": {
      "description": "Upload information for the file.",
      "type": "object",
      "properties": {
        "name": {
          "description": "File name.",
          "type": "string"
        },
        "uploadUrl": {
          "description": "URL to an upload session for the file contents.",
          "type": "string"
        },
        "contentUrl": {
          "description": "URL to the file.",
          "type": "string"
        },
        "uniqueId": {
          "description": "Identifier that uniquely identifies the file.",
          "type": "string"
        },
        "fileType": {
          "description": "File type.",
          "type": "string"
        }
      }
    },

    "FileConsentCardResponse": {
      "description": "File consent card response invoke activity payload.",
      "type": "object",
      "properties": {
        "action": {
          "description": "User action on the file consent card.",
          "type": "string",
          "enum": [ "accept", "decline" ]
        },
        "context": {
          "description": "Context sent with the file consent card.",
          "type": "object"
        },
        "uploadInfo": {
          "description": "Context sent back to the Bot if user declined. This is free flow schema and is sent back in Value field of Activity.",
          "$ref": "#/definitions/FileUploadInfo"
        }
      }
    }
  }
}
